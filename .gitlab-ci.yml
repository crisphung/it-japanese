workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'

default:
  tags:
    - docker
  
variables:
  SPRING_PROFILES_ACTIVE: dev
  IMAGE_NAME: crisphung/itss-be
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  IMAGE_TAG: v1
  EC_USER: ec2-user
  EC_IP: 13.212.90.132
  CONTAINER_NAME: itss-be

cache:
  paths:
    - ".m2/repository"

stages:
    - build
    - docker
    - deploy
    - test deploy

maven-build:
  image: maven:alpine
  stage: build
  before_script:
    - mvn --version
  script: 
    - echo "Start build package"
    - mvn package -B
    - echo "Build finish!"
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 day

docker-job:
  stage: docker

  image: docker:20.10.22
  
  services:
    - docker:20.10.22-dind

  variables:
    DOCKER_TLS_CERTDIR: ""
    
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy-job:
  image: alpine
  stage: deploy

  before_script:
    - chmod 400 $SSH_KEY
    - apk update && apk add openssh-client
  script:
    - echo "Deploying..."
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC_USER@$EC_IP "sudo systemctl start docker.service"
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC_USER@$EC_IP "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD"
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC_USER@$EC_IP "docker pull $IMAGE_NAME:$IMAGE_TAG"
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC_USER@$EC_IP "docker container rm -f $CONTAINER_NAME || true"
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC_USER@$EC_IP "export IMAGE_TAG=$IMAGE_TAG"
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC_USER@$EC_IP "docker compose up -d"
    - sleep 10
    - echo "Deployed!"

test deploy:
  image: alpine
  stage: test deploy
  before_script:
    - apk add curl
  script:
    - curl http://$EC_IP/api/healthcheck | grep -q "check"







